name: Deploy cron common
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug
env:
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  APP_NAME: market_data_notification
jobs:
  health_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check whether market data notification is up
        id: health_check
        run: |
          curl $SSH_HOST/healthz
  notify_unsuccessful_health_check:
    runs-on: ubuntu-latest
    needs: [health_check]
    if: ${{ failure() }}
    steps:
      - name: Send telegram notification unsuccessful run
        env:
          TELEGRAM_DEV_BOT_TOKEN: ${{ secrets.TELEGRAM_DEV_BOT_TOKEN }}
          TELEGRAM_DEV_ID: ${{ secrets.TELEGRAM_DEV_ID }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          text=$(echo "\[Github action\] Market data notification backend build and deploy failed at $now. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" | sed 's~[[:blank:]]~%20~g')
          curl "https://api.telegram.org/bot${TELEGRAM_DEV_BOT_TOKEN}/sendMessage?chat_id=${TELEGRAM_DEV_ID}&text=$text"
          exit 1
  deploy:
    runs-on: ubuntu-latest
    needs: [health_check]
    steps:
      - uses: actions/checkout@v3
      - name: Configure SSH
        id: ssh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/market_data_notification_rsa
          chmod 600 ~/.ssh/market_data_notification_rsa
          SSH_HOST_IP=$(nslookup $SSH_HOST | tail -n 2 | head -n 1 | cut -d ' ' -f 2)
          echo "host name: $SSH_HOST, host ip address: $SSH_HOST_IP"
          cat << EOF >> ~/.ssh/config
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/market_data_notification_rsa
            StrictHostKeyChecking no
          EOF
      - name: SSH into server, set my_crontab
        id: deploy
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          REDIS_KEY: ${{ secrets.REDIS_KEY }}
        run: |
          ssh production <<-EOF

          crontab -l > mycron
          echo "45 12,13 * * 0-6 src/job/redis_report.sh $SENDGRID_API_KEY $EMAIL_RECIPIENT $EMAIL_SENDER $REDIS_KEY > common.log 2>&1" >> mycron
          
          mv mycron mycron.bak
          cat mycron.bak | sort | uniq > mycron
          crontab mycron
          echo $?
          EOF
          
          if [ $? -ne 0 ]
          then
            rm -rf ~/.ssh
            echo "error"
            exit 1sadsadas
          else
            echo "all good"
          fi
          rm -rf ~/.ssh
  notify_unsuccessful:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ failure() }}
    steps:
      - name: Send telegram notification unsuccessful run
        env:
          TELEGRAM_DEV_BOT_TOKEN: ${{ secrets.TELEGRAM_DEV_BOT_TOKEN }}
          TELEGRAM_DEV_ID: ${{ secrets.TELEGRAM_DEV_ID }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          text=$(echo "\[Github action\] Market data notification backend deploy cron common failed at $now. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" | sed 's~[[:blank:]]~%20~g')
          curl "https://api.telegram.org/bot${TELEGRAM_DEV_BOT_TOKEN}/sendMessage?chat_id=${TELEGRAM_DEV_ID}&text=$text"
  notify_successful:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Send telegram notification successful run
        env:
          TELEGRAM_DEV_BOT_TOKEN: ${{ secrets.TELEGRAM_DEV_BOT_TOKEN }}
          TELEGRAM_DEV_ID: ${{ secrets.TELEGRAM_DEV_ID }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          text=$(echo "\[Github action\] Market data notification backend deploy cron common succeeded at $now. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" | sed 's~[[:blank:]]~%20~g')
          curl "https://api.telegram.org/bot${TELEGRAM_DEV_BOT_TOKEN}/sendMessage?chat_id=${TELEGRAM_DEV_ID}&text=$text"

